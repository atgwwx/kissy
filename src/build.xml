<!--
  kissy 构建文件，开启每个组件的构建
  @author yiminghe@gmail.com
-->
<project name="all.build" xmlns:ac="antlib:net.sf.antcontrib">
    <import file="config.xml"/>

    <target name="build">
        <subant target="" failonerror="true"
                buildpath="${kissy.src.dir}/loader"
                inheritall="false"/>
        <subant target="" failonerror="true"
                buildpath="${kissy.src.dir}/util/"
                inheritall="false"/>
        <subant target="" failonerror="true"
                buildpath="${kissy.src.dir}/xtemplate/-"
                inheritall="false"/>

        <subant target="build" failonerror="true" inheritall="false">
            <fileset dir="${kissy.src.dir}"
                     excludes="
                     build.xml,
                     loader/build.xml,
                     util/build.xml,
                     xtemplate/-/build.xml,
                     meta/build.xml"
                     includes="**/build.xml"/>
        </subant>

        <subant target="" failonerror="true"
                buildpath="${kissy.src.dir}/meta/"
                inheritall="false"/>
    </target>

    <target name="build-seed">
        <concat destfile="${kissy.build.dir}/seed-debug.js"
                encoding="${charset}" outputencoding="${charset}">
            <path location="${kissy.build.dir}/loader-debug.js"/>
            <path location="${kissy.build.dir}/ua-debug.js"/>
            <path location="${kissy.build.dir}/feature-debug.js"/>
            <path location="${kissy.build.dir}/meta-debug.js"/>
        </concat>
        <concat destfile="${kissy.build.dir}/seed.js"
                encoding="${charset}" outputencoding="${charset}">
            <path location="${kissy.build.dir}/loader.js"/>
            <path location="${kissy.build.dir}/ua.js"/>
            <path location="${kissy.build.dir}/feature.js"/>
            <path location="${kissy.build.dir}/meta.js"/>
        </concat>
    </target>

    <!--jshint all js-->
    <target name="jshint">
        <subant target="jshint" failonerror="true" inheritall="false">
            <fileset dir="${kissy.src.dir}"
                     excludes="build.xml"
                     includes="**/build.xml"/>
        </subant>
    </target>

    <!--jscs all js-->
    <target name="jscs">
        <subant target="jscs" failonerror="true" inheritall="false">
            <fileset dir="${kissy.src.dir}"
                     excludes="build.xml"
                     includes="**/build.xml"/>
        </subant>
    </target>

    <!--tpl2mod all js-->
    <target name="tpl2mod">
        <subant target="tpl2mod" failonerror="true" inheritall="false">
            <fileset dir="${kissy.src.dir}"
                     excludes="build.xml"
                     includes="**/build.xml"/>
        </subant>
    </target>

    <target name="commit">
        <input addproperty="git.commit.message">
            git commit message :
        </input>
        <ac:if>
            <ac:not>
                <equals arg1="${git.commit.message}" arg2="">
                </equals>
            </ac:not>
            <ac:then>
                <exec executable="cmd"
                      failonerror="true">
                    <arg line="/c cd ../"/>
                </exec>

                <exec executable="cmd"
                      failonerror="true">
                    <arg line="/c git add --all"/>
                </exec>
                <exec executable="cmd" failonerror="true">
                    <arg line="/c git commit -am '${git.commit.message}'"/>
                </exec>
            </ac:then>
        </ac:if>
    </target>

    <target name="sync" depends="commit">
        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.dev}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.master}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.dev}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.master}"/>
        </exec>
    </target>


    <target name="sync-dev" depends="commit">
        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.origin} ${git.dev}:${git.dev}"/>
        </exec>

        <exec executable="cmd" failonerror="true">
            <arg line="/c git push ${git.remote} ${git.dev}:${git.dev}"/>
        </exec>
    </target>

    <target name="update-version">
        <replaceregexp match="v\d.\d\d"
                       replace="v${version}"
                       flags="g"
                       encoding="${charset}"
                       byline="true">
            <fileset dir="${kissy.build.dir}" includes="${js-css.files}"/>
        </replaceregexp>

        <replaceregexp match="kissy/k/\d.\d.\d/"
                       replace="kissy/k/${cdn.version}/"
                       flags="g"
                       encoding="${charset}"
                       byline="true">
            <fileset dir="${kissy.build.dir}" includes="${js-css.files}"/>
        </replaceregexp>

        <replaceregexp match="version:\s*['&quot;]\d.\d\d['&quot;]"
                       replace="version:'${version}'"
                       flags="g"
                       encoding="${charset}"
                       byline="true">
            <fileset dir="${kissy.build.dir}" includes="${js-css.files}"/>
        </replaceregexp>
    </target>

    <target name="clean">
        <delete dir="${kissy.build.dir}"/>
        <delete dir="${kissy.lib.dir}"/>
    </target>
</project>